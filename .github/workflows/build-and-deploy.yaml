name: Build and deploy
on:
  pull_request:
    branches:
      - main
env:
  SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
  AZURE_RESOURCE_GROUP_NAME: "rg-datamarketplace"
  AZURE_FUNCTIONAPP_NAME: "data-marketplace-adapter-service"
  AZURE_FUNCTIONAPP_PACKAGE_PATH: "${{ github.workspace }}/"
  BUILD_OUTPUT_PATH: ${{ github.workspace }}/
  BUILD_PACKAGE_NAME: adapters.zip
  BUILD_ARTIFACT_PATH: ${{ github.workspace }}/build_artifacts

jobs:
  check-code:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout 🛎️
        uses: actions/checkout@v3
      - name: Setup node 🧱
        uses: actions/setup-node@v3
        with:
          node-version-file: ".nvmrc"
          cache: "npm"
      - name: Node version
        id: node-v
        run: node --version
      - name: Install dependencies 🔧
        id: install-dependencies
        run: npm ci
      - name: Run ESLint 🔎
        id: lint
        run: npm run lint
      - name: Run tests ✅
        id: test
        run: npm run test
      - name: Log errors to Slack 📄
        id: slack-err-log
        uses: act10ns/slack@v1
        with:
          status: ${{ job.status }}
          steps: ${{ toJson(steps) }}
        if: failure()

  deploy-az-infrastructure:
    needs: check-code
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    steps:
      - name: Login to Azure 🔐
        id: login-to-azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Checkout internal 🛎️
        id: checkout-internal
        uses: actions/checkout@v3
        with:
          repository: "equinor/data-marketplace-internal"
          ref: main
          token: ${{ secrets.PAT }}

      - name: Creating Azure Function App 🏗️
        id: create-azure-app
        uses: azure/CLI@v1
        with:
          inlineScript: |
            az deployment group create \
            --name az-func-adapter-service-deploy \
            --resource-group ${{ env.AZURE_RESOURCE_GROUP_NAME }} \
            --template-file $GITHUB_WORKSPACE/ci/build-and-deploy/main.bicep \
      - name: log-errors-to-slack 📄
        uses: act10ns/slack@v1
        with:
          status: ${{ job.status }}
          steps: ${{ toJson(steps) }}
        if: failure()

  build-function-application:
    needs: check-code
    runs-on: ubuntu-latest
    steps:
      - name: Checkout 🛎️
        uses: actions/checkout@v3
      - name: Setup node 🧱
        uses: actions/setup-node@v3
        with:
          node-version-file: ".nvmrc"
          cache: "npm"
      - name: Node version
        id: node-v
        run: node --version

      - name: Install dependencies 🔧
        id: install-dependencies
        run: npm ci
      - name: Build ⚙
        id: build-functions
        run: |
          npm run build
          mkdir ${{ env.BUILD_ARTIFACT_PATH}}
          pushd ${{ env.BUILD_OUTPUT_PATH }}
          zip -r ${{ env.BUILD_ARTIFACT_PATH }}/${{ env.BUILD_PACKAGE_NAME }} .
          popd
      - name: Package Azure Function release build
        id: package-artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.AZURE_FUNCTIONAPP_NAME }}
          path: ${{ env.BUILD_ARTIFACT_PATH }}
      - name: log-errors-to-slack 📄
        uses: act10ns/slack@v1
        with:
          status: ${{ job.status }}
          steps: ${{ toJson(steps) }}
        if: failure()

  deploy-function-application:
    environment:
      name: production
    needs: [build-function-application, deploy-az-infrastructure]
    runs-on: ubuntu-latest
    steps:
      - name: Login to Azure 🔐
        id: login-to-azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
          enable-AzPSSession: true
      - name: log-errors-to-slack 📄
        uses: act10ns/slack@v1
        with:
          status: ${{ job.status }}
          steps: ${{ toJson(steps) }}
        if: failure()
